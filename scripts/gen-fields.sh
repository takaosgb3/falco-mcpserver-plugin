#!/usr/bin/env bash
set -euo pipefail
# Purpose: Generate Go field definitions/mapping from audit schema (skeleton).
# Idempotent: overwrites outputs deterministically. No network.

SCHEMA_PATH="$(dirname "$0")/../internal_docs/schema/mcp_audit_v1.json"
OUT_DIR="$(dirname "$0")/../pkg/generated"
OUT_FILE="$OUT_DIR/mcp_fields.go"

mkdir -p "$OUT_DIR"

if [[ ! -f "$SCHEMA_PATH" ]]; then
  echo "[gen-fields] schema not found: $SCHEMA_PATH" >&2
  exit 1
fi

cat >"$OUT_FILE" <<'EOF'
// Code generated by scripts/gen-fields.sh; DO NOT EDIT.
package generated

// This is a placeholder demonstrating where generated field mappings would live.
// Implement codegen to parse internal_docs/schema/mcp_audit_v1.json and generate:
// - Field name constants (mcp.*)
// - Type info and validation helpers
// - JSON -> field extraction table

var MCPFieldNames = []string{
    "mcp.session_id",
    "mcp.client_process",
    "mcp.server_host",
    "mcp.server_port",
    "mcp.tls",
    "mcp.auth_scheme",
    "mcp.method",
    "mcp.request_bytes",
    "mcp.response_bytes",
    "mcp.tool_invoke_count",
    "mcp.file_access_count",
    "mcp.timestamp",
}
EOF

echo "[gen-fields] wrote $OUT_FILE"

